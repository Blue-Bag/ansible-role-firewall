---
# firewall mode [simple | chain ]
firewall_mode: 'simple'
firewall_backup_cfg: false

firewall_state: started
firewall_enabled_at_boot: true

firewall_flush_rules_and_chains: true

# =======================   simple config
firewall_allowed_tcp_ports:
  - "22"
  - "25"
  - "80"
  - "443"

firewall_ipv6: true
# don't put ssh in here as we treat that separately
firewall_allowed_tcp_ports_ip6: []

# allow mail port out
firewall_allowed_tcp_ports_out:
  - "25"

# firewall defaults
filewall_input_default: 'ACCEPT'
filewall_forward_default: 'ACCEPT'
filewall_output_default: 'ACCEPT'

firewall_allowed_udp_ports: []
firewall_forwarded_tcp_ports: []
firewall_forwarded_udp_ports: []
firewall_additional_rules: []

firewall_ip6_additional_rules: []

firewall_log_dropped_packets: true

firewall_log_level: 4
# 0 emerg
# 1 alert
# 2 crit
# 3 err
# 4 warning
# 5 notice
# 6 info
# 7 debug

# Set to true to ensure other firewall management software is disabled.
firewall_disable_firewalld: false
firewall_disable_ufw: false

# =======================   chain config

firewall_whitelist:
  - {name: 'local', ip: "192.168.100.1"}
firewall_whitelist_net: []

firewall_whitelist_ipset: 'whitelist_wwl'

# firewall_whitelistgroup: []
firewall_chain_wl: "{{ firewall_whitelist }}"

firewall_blacklist:
  - {name: 'Some rogue', ip: "96.47.225.0/24"}

firewall_ddos_rate: '150/second'
firewall_ddos_burst: '160'

firewall_protected_chains:
  - {
    port: "22",
    state: "NEW",
    name: "SSH",
    default: "ACCEPT",
    ratelimit: "True",
    hit_rate: 4,
    hit_ttl: 3600
  }
  - {
    port: "10000",
    name: "WEBMIN",
    default: "ACCEPT",
    ratelimit: "True",
    hit_rate: 4,
    hit_ttl: 3600
  }
  - {
    port: "80",
    name: "HTTP",
    state: "NEW,RELATED,ESTABLISHED",
    default: "ACCEPT",
    ddos: true,
    ddos_rate: "{{ firewall_ddos_rate }}",
    ddos_burst: "{{ firewall_ddos_burst }}"
  }
  - {
    port: "443",
    name: "HTTPS",
    default: "ACCEPT"
  }
  - {
    port: "3306",
    name: "MYSQL",
    default: "DROP"
  }
  - {
    port: "2812",
    name: "MONIT",
    default: "DROP"
  }

# ========================  extended rules
firewall_extra_security: true
firewall_block_portscan: true
firewall_block_spoofed: true
firewall_block_smurf: true
firewall_allow_ping: true

# ========================  ipset
firewall_ipset: false
firewall_reban_hosts: true
firewall_reban_list: 'banned-hosts'
firewall_ipset_timeout: 2073600
firewall_ipset_bl_maxelem: 100000

# Create lists, for network blocks and single IP addresses
# hash:net = Networks
# hash:ip = single IPs
# if using a local job to update lists then
# set these to your locally generated list
firewall_blocklists:
  - {
    name: blocked-nets,
    type: 'hash:net',
    src: 'blocked-nets.txt',
    persist: true,
    timeout: "{{ firewall_ipset_timeout }}"
  }
  - {
    name: blocked-ips,
    type: 'hash:ip',
    src: 'blocked-ips.txt',
    persist: true,
    timeout: "{{ firewall_ipset_timeout }}"
  }
  # - {
  #     name: banned-hosts,
  #     type: 'hash:ip',
  #     src: '',
  #     persist: no,
  #     timeout: '604800'
  # }
# ======================= repo for Redhat ipset
# Pass in a comma-separated list of repos to use (e.g. "remi,epel").
php_enablerepo: "epel"

# =======================  Badips
# badips_key: ''
firewall_block_badips: false
# level to report 0 = all - used as we want all of ours
firewall_badips_level: '0'
# service to report on - we want all of ours
firewall_badips_service: 'any'
firewall_badips_ipset: 'badips'
firewall_badips_folder: '/usr/share/badips'
firewall_badips_db: '/usr/share/badips/badips.db'

# =======================  Cloudflare
firewall_whitelist_cf: false
firewall_cf_ipset: 'whitelist_cf'
