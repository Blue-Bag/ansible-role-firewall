---

- name: Ensure ipset is installed (Debian).
  apt: pkg=ipset state=present
  when: ansible_os_family == 'Debian'


- name: Ensure ipset packages are installed (RedHat).
  yum:
    name: "ipset"
    state: present
    enablerepo: "{{ php_enablerepo }}"
  when: ansible_os_family == 'RedHat'


## here we should run the get-blocklists so we don't maintain a list here

- name: Put up the block lists
  copy:
    src: "{{ item.src }}"
    dest: "/etc/firewall-{{ item.name }}.txt"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ firewall_blocklists }}"
  notify: restart firewall

- name: Copy firewall ipset script into place.
  template:
    src: 'firewall-upd8ipset.sh.j2'
    dest: "/etc/firewall-upd8ipset.sh"
    owner: root
    group: root
    mode: 0744
  when: firewall_mode == 'chain'
  notify: restart firewall

- name: Get list of existing ipsets
  command: ipset list -n
  become: true
  register: _ipset_list_names
  changed_when: false

- name: Clear existing ipsets if required
  command: ipset destroy
  become: true
  changed_when: false
  when: firewall_clear_existing_ipsets | bool


- name: Setfact for ipsets to destroy
  block:
    - name: Setfact for ipsets to destroy
      set_fact:
         _ipsets_to_delete: "{{ _ipset_list_names['stdout_lines']  | intersect(firewall_ipsets_delete) }}"

  # note this will fail of the firewall is running
    - name: Delete other ipsets
      command: 'ipset destroy {{ item }}'
      changed_when: false
      loop: "{{ _ipsets_to_delete }}"
      ignore_errors: true
  when:
   - _ipset_list_names['stdout_lines'] | length > 0
   - firewall_ipsets_delete
